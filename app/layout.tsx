import type { Metadata } from "next";
import { Geist, Geist_Mono , Chivo, Lora , Roboto_Mono , Raleway , Poppins } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/global/navbar";
import React from "react";

const chivo = Chivo({
  subsets: ['latin'],
  variable: '--font-chivo',
  display: 'swap',
});

const lora = Lora({
  subsets: ['latin'],
  variable: '--font-lora',
  display: 'swap',
});

const robotoMono = Roboto_Mono({
  subsets: ['latin'],
  variable: '--font-roboto-mono',
  display: 'swap',
});

const raleway = Raleway({
  subsets: ['latin'],
  variable: '--font-raleway',
  display: 'swap',
});

const poppins = Poppins({
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-poppins',
  display: 'swap',
})


export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};



// type Props= {
//   children: React.ReactNode;
//   params: {locale:string}
// }

// export const generateStaticParams = async () => {
//   return [{ locale: 'en' }, { locale: 'fa' }];
// };

// export default async function RootLayout({ children, params: { locale } }: Props) {
//   const supported = ['en', 'fa'];
//   if (!supported.includes(locale)) notFound();

//   const messages = (await import(`../../messages/${locale}.json`)).default;

//   return (
//     <html lang={locale} dir={locale === 'fa' ? 'rtl' : 'ltr'}>
//       <body className={`${chivo.variable} ${lora.variable} ${robotoMono.variable} antialiased`}>
//         <NextIntlClientProvider locale={locale} messages={messages}>
//           <Navbar />
//           <main className="px-4 md:px-8">{children}</main>
//         </NextIntlClientProvider>
//       </body>
//     </html>
//   );
// }


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={` ${chivo.variable} ${lora.variable} ${robotoMono.variable} antialiased`}>
        <Navbar />
        <main className="px-4 md:px-8">
          {children}
        </main>
      </body>
    </html>
  );
}
